import { DocumentNode } from 'graphql';
import { CombinedError } from '../utils';
export interface UseSubscriptionArgs<V> {
    query: DocumentNode | string;
    variables?: V;
}
export declare type SubscriptionHandler<T, R> = (prev: R | undefined, data: T) => R;
export interface UseSubscriptionState<T> {
    fetching: boolean;
    data?: T;
    error?: CombinedError;
}
export declare type UseSubscriptionResponse<T> = [UseSubscriptionState<T>];
export declare const useSubscription: <T = any, R = T, V = object>(args: UseSubscriptionArgs<V>, handler?: SubscriptionHandler<T, R> | undefined) => [UseSubscriptionState<R>];
